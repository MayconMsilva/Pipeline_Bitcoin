import streamlit as st
from tinydb import TinyDB
import pandas as pd
import plotly.express as px
from datetime import datetime
from analise_ia import gerar_analise_cripto  # Fun√ß√£o com Agente IA

# Fun√ß√£o para carregar dados do TinyDB


def carregar_dados():
    db = TinyDB("db.json")  # Altere para "../db.json" se necess√°rio
    dados = db.all()
    return dados

# Fun√ß√£o para preparar os dados para o dashboard


def preparar_dados(dados):
    df = pd.DataFrame(dados)
    df["valor"] = pd.to_numeric(df["valor"], errors="coerce")
    df["timestamp"] = pd.to_datetime(df["timestamp"])
    df = df.sort_values("timestamp")
    return df


# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dashboard Cripto", layout="wide")
st.title("üìä Dashboard de Cota√ß√£o de Criptomoeda (Coinbase API)")

# Carregamento dos dados
dados = carregar_dados()

if not dados:
    st.warning("Ainda n√£o h√° dados dispon√≠veis.")
else:
    df = preparar_dados(dados)

    # Extrair os √∫ltimos 10 dados para an√°lise da IA
    df_ultimos = df.tail(10)[["timestamp", "valor"]].copy()
    df_ultimos["timestamp"] = df_ultimos["timestamp"].dt.strftime(
        "%Y-%m-%d %H:%M:%S")
    tabela_para_ia = df_ultimos.to_string(index=False)

    # Mostrar m√©tricas principais
    ultima_linha = df.iloc[-1]
    col1, col2, col3 = st.columns(3)
    col1.metric("üí∞ Valor Atual",
                f"{ultima_linha['valor']} {ultima_linha['moeda']}")
    col2.metric("ü™ô Criptomoeda", ultima_linha["criptomoeda"])
    col3.metric("‚è±Ô∏è √öltima Atualiza√ß√£o",
                ultima_linha["timestamp"].strftime("%H:%M:%S"))

    # Gr√°fico de linha
    fig = px.line(df, x="timestamp", y="valor",
                  title="Hist√≥rico da Cota√ß√£o", markers=True)
    st.plotly_chart(fig, use_container_width=True)

    # Dados brutos expandidos
    with st.expander("üìÑ Ver dados brutos"):
        st.dataframe(df)

    # An√°lise de IA com base nos dados
    # An√°lise de IA com bot√£o para gerar
st.markdown("---")
st.subheader("üß† An√°lise de IA com base nos dados reais")

if st.button("üîÑ Gerar nova an√°lise com IA"):
    with st.spinner("IA est√° analisando os dados..."):
        try:
            analise = gerar_analise_cripto(tabela_para_ia)
            st.markdown(analise)
        except Exception as e:
            st.error(f"Erro ao gerar an√°lise com IA: {e}")
else:
    st.info("Clique no bot√£o acima para gerar uma an√°lise com IA com base nos dados mais recentes.")
